// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: paper.proto

package paper

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Paper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperNumber         string `protobuf:"bytes,1,opt,name=paper_number,json=paperNumber,proto3" json:"paper_number,omitempty"`
	PaperName           string `protobuf:"bytes,2,opt,name=paper_name,json=paperName,proto3" json:"paper_name,omitempty"`
	PaperTopic          string `protobuf:"bytes,3,opt,name=paper_topic,json=paperTopic,proto3" json:"paper_topic,omitempty"`
	PaperContent        string `protobuf:"bytes,4,opt,name=paper_content,json=paperContent,proto3" json:"paper_content,omitempty"`
	RelatedCode         string `protobuf:"bytes,5,opt,name=related_code,json=relatedCode,proto3" json:"related_code,omitempty"`
	DeviceNumberModelId string `protobuf:"bytes,6,opt,name=device_number_model_id,json=deviceNumberModelId,proto3" json:"device_number_model_id,omitempty"`
}

func (x *Paper) Reset() {
	*x = Paper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paper) ProtoMessage() {}

func (x *Paper) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paper.ProtoReflect.Descriptor instead.
func (*Paper) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{0}
}

func (x *Paper) GetPaperNumber() string {
	if x != nil {
		return x.PaperNumber
	}
	return ""
}

func (x *Paper) GetPaperName() string {
	if x != nil {
		return x.PaperName
	}
	return ""
}

func (x *Paper) GetPaperTopic() string {
	if x != nil {
		return x.PaperTopic
	}
	return ""
}

func (x *Paper) GetPaperContent() string {
	if x != nil {
		return x.PaperContent
	}
	return ""
}

func (x *Paper) GetRelatedCode() string {
	if x != nil {
		return x.RelatedCode
	}
	return ""
}

func (x *Paper) GetDeviceNumberModelId() string {
	if x != nil {
		return x.DeviceNumberModelId
	}
	return ""
}

//批量获取论文信息
type MGetPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultiId             string `protobuf:"bytes,1,opt,name=multi_id,json=multiId,proto3" json:"multi_id,omitempty"`
	PaperNumber         string `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber,proto3" json:"paper_number,omitempty"`
	DeviceNumberModelId string `protobuf:"bytes,3,opt,name=device_number_model_id,json=deviceNumberModelId,proto3" json:"device_number_model_id,omitempty"`
}

func (x *MGetPaperRequest) Reset() {
	*x = MGetPaperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGetPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGetPaperRequest) ProtoMessage() {}

func (x *MGetPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGetPaperRequest.ProtoReflect.Descriptor instead.
func (*MGetPaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{1}
}

func (x *MGetPaperRequest) GetMultiId() string {
	if x != nil {
		return x.MultiId
	}
	return ""
}

func (x *MGetPaperRequest) GetPaperNumber() string {
	if x != nil {
		return x.PaperNumber
	}
	return ""
}

func (x *MGetPaperRequest) GetDeviceNumberModelId() string {
	if x != nil {
		return x.DeviceNumberModelId
	}
	return ""
}

type MGetPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Paper   []*Paper `protobuf:"bytes,2,rep,name=paper,proto3" json:"paper,omitempty"`
}

func (x *MGetPaperResponse) Reset() {
	*x = MGetPaperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGetPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGetPaperResponse) ProtoMessage() {}

func (x *MGetPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGetPaperResponse.ProtoReflect.Descriptor instead.
func (*MGetPaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{2}
}

func (x *MGetPaperResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MGetPaperResponse) GetPaper() []*Paper {
	if x != nil {
		return x.Paper
	}
	return nil
}

//添加论文
type AddPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultiId string `protobuf:"bytes,1,opt,name=multi_id,json=multiId,proto3" json:"multi_id,omitempty"`
	Paper   *Paper `protobuf:"bytes,2,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *AddPaperRequest) Reset() {
	*x = AddPaperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaperRequest) ProtoMessage() {}

func (x *AddPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaperRequest.ProtoReflect.Descriptor instead.
func (*AddPaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{3}
}

func (x *AddPaperRequest) GetMultiId() string {
	if x != nil {
		return x.MultiId
	}
	return ""
}

func (x *AddPaperRequest) GetPaper() *Paper {
	if x != nil {
		return x.Paper
	}
	return nil
}

type AddPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddPaperResponse) Reset() {
	*x = AddPaperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaperResponse) ProtoMessage() {}

func (x *AddPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaperResponse.ProtoReflect.Descriptor instead.
func (*AddPaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{4}
}

func (x *AddPaperResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

//修改/删除论文信息
type UpdatePaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperNumber         string `protobuf:"bytes,1,opt,name=paper_number,json=paperNumber,proto3" json:"paper_number,omitempty"`
	PaperName           string `protobuf:"bytes,2,opt,name=paper_name,json=paperName,proto3" json:"paper_name,omitempty"`
	PaperTopic          string `protobuf:"bytes,3,opt,name=paper_topic,json=paperTopic,proto3" json:"paper_topic,omitempty"`
	PaperContent        string `protobuf:"bytes,4,opt,name=paper_content,json=paperContent,proto3" json:"paper_content,omitempty"`
	RelatedCode         string `protobuf:"bytes,5,opt,name=related_code,json=relatedCode,proto3" json:"related_code,omitempty"`
	DeviceNumberModelId string `protobuf:"bytes,6,opt,name=device_number_model_id,json=deviceNumberModelId,proto3" json:"device_number_model_id,omitempty"`
	IsDeleted           int32  `protobuf:"varint,7,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	MultiId             string `protobuf:"bytes,8,opt,name=multi_id,json=multiId,proto3" json:"multi_id,omitempty"`
}

func (x *UpdatePaperRequest) Reset() {
	*x = UpdatePaperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaperRequest) ProtoMessage() {}

func (x *UpdatePaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaperRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaperRequest) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePaperRequest) GetPaperNumber() string {
	if x != nil {
		return x.PaperNumber
	}
	return ""
}

func (x *UpdatePaperRequest) GetPaperName() string {
	if x != nil {
		return x.PaperName
	}
	return ""
}

func (x *UpdatePaperRequest) GetPaperTopic() string {
	if x != nil {
		return x.PaperTopic
	}
	return ""
}

func (x *UpdatePaperRequest) GetPaperContent() string {
	if x != nil {
		return x.PaperContent
	}
	return ""
}

func (x *UpdatePaperRequest) GetRelatedCode() string {
	if x != nil {
		return x.RelatedCode
	}
	return ""
}

func (x *UpdatePaperRequest) GetDeviceNumberModelId() string {
	if x != nil {
		return x.DeviceNumberModelId
	}
	return ""
}

func (x *UpdatePaperRequest) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

func (x *UpdatePaperRequest) GetMultiId() string {
	if x != nil {
		return x.MultiId
	}
	return ""
}

type UpdatePaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdatePaperResponse) Reset() {
	*x = UpdatePaperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaperResponse) ProtoMessage() {}

func (x *UpdatePaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaperResponse.ProtoReflect.Descriptor instead.
func (*UpdatePaperResponse) Descriptor() ([]byte, []int) {
	return file_paper_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePaperResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_paper_proto protoreflect.FileDescriptor

var file_paper_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x22, 0xe7, 0x01, 0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x85,
	0x01, 0x0a, 0x10, 0x4d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x11, 0x4d, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xd0, 0x01, 0x0a, 0x05,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x09, 0x4d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4d, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x2e, 0x4d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_paper_proto_rawDescOnce sync.Once
	file_paper_proto_rawDescData = file_paper_proto_rawDesc
)

func file_paper_proto_rawDescGZIP() []byte {
	file_paper_proto_rawDescOnce.Do(func() {
		file_paper_proto_rawDescData = protoimpl.X.CompressGZIP(file_paper_proto_rawDescData)
	})
	return file_paper_proto_rawDescData
}

var file_paper_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_paper_proto_goTypes = []interface{}{
	(*Paper)(nil),               // 0: paper.paper
	(*MGetPaperRequest)(nil),    // 1: paper.MGetPaperRequest
	(*MGetPaperResponse)(nil),   // 2: paper.MGetPaperResponse
	(*AddPaperRequest)(nil),     // 3: paper.AddPaperRequest
	(*AddPaperResponse)(nil),    // 4: paper.AddPaperResponse
	(*UpdatePaperRequest)(nil),  // 5: paper.UpdatePaperRequest
	(*UpdatePaperResponse)(nil), // 6: paper.UpdatePaperResponse
}
var file_paper_proto_depIdxs = []int32{
	0, // 0: paper.MGetPaperResponse.paper:type_name -> paper.paper
	0, // 1: paper.AddPaperRequest.paper:type_name -> paper.paper
	1, // 2: paper.Paper.MGetPaper:input_type -> paper.MGetPaperRequest
	3, // 3: paper.Paper.AddPaper:input_type -> paper.AddPaperRequest
	5, // 4: paper.Paper.UpdatePaper:input_type -> paper.UpdatePaperRequest
	2, // 5: paper.Paper.MGetPaper:output_type -> paper.MGetPaperResponse
	4, // 6: paper.Paper.AddPaper:output_type -> paper.AddPaperResponse
	6, // 7: paper.Paper.UpdatePaper:output_type -> paper.UpdatePaperResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_paper_proto_init() }
func file_paper_proto_init() {
	if File_paper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_paper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGetPaperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGetPaperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPaperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPaperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paper_proto_goTypes,
		DependencyIndexes: file_paper_proto_depIdxs,
		MessageInfos:      file_paper_proto_msgTypes,
	}.Build()
	File_paper_proto = out.File
	file_paper_proto_rawDesc = nil
	file_paper_proto_goTypes = nil
	file_paper_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PaperClient is the client API for Paper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaperClient interface {
	MGetPaper(ctx context.Context, in *MGetPaperRequest, opts ...grpc.CallOption) (*MGetPaperResponse, error)
	AddPaper(ctx context.Context, in *AddPaperRequest, opts ...grpc.CallOption) (*AddPaperResponse, error)
	UpdatePaper(ctx context.Context, in *UpdatePaperRequest, opts ...grpc.CallOption) (*UpdatePaperResponse, error)
}

type paperClient struct {
	cc grpc.ClientConnInterface
}

func NewPaperClient(cc grpc.ClientConnInterface) PaperClient {
	return &paperClient{cc}
}

func (c *paperClient) MGetPaper(ctx context.Context, in *MGetPaperRequest, opts ...grpc.CallOption) (*MGetPaperResponse, error) {
	out := new(MGetPaperResponse)
	err := c.cc.Invoke(ctx, "/paper.Paper/MGetPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paperClient) AddPaper(ctx context.Context, in *AddPaperRequest, opts ...grpc.CallOption) (*AddPaperResponse, error) {
	out := new(AddPaperResponse)
	err := c.cc.Invoke(ctx, "/paper.Paper/AddPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paperClient) UpdatePaper(ctx context.Context, in *UpdatePaperRequest, opts ...grpc.CallOption) (*UpdatePaperResponse, error) {
	out := new(UpdatePaperResponse)
	err := c.cc.Invoke(ctx, "/paper.Paper/UpdatePaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaperServer is the server API for Paper service.
type PaperServer interface {
	MGetPaper(context.Context, *MGetPaperRequest) (*MGetPaperResponse, error)
	AddPaper(context.Context, *AddPaperRequest) (*AddPaperResponse, error)
	UpdatePaper(context.Context, *UpdatePaperRequest) (*UpdatePaperResponse, error)
}

// UnimplementedPaperServer can be embedded to have forward compatible implementations.
type UnimplementedPaperServer struct {
}

func (*UnimplementedPaperServer) MGetPaper(context.Context, *MGetPaperRequest) (*MGetPaperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MGetPaper not implemented")
}
func (*UnimplementedPaperServer) AddPaper(context.Context, *AddPaperRequest) (*AddPaperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPaper not implemented")
}
func (*UnimplementedPaperServer) UpdatePaper(context.Context, *UpdatePaperRequest) (*UpdatePaperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePaper not implemented")
}

func RegisterPaperServer(s *grpc.Server, srv PaperServer) {
	s.RegisterService(&_Paper_serviceDesc, srv)
}

func _Paper_MGetPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MGetPaperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaperServer).MGetPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paper.Paper/MGetPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaperServer).MGetPaper(ctx, req.(*MGetPaperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paper_AddPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPaperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaperServer).AddPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paper.Paper/AddPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaperServer).AddPaper(ctx, req.(*AddPaperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paper_UpdatePaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePaperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaperServer).UpdatePaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paper.Paper/UpdatePaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaperServer).UpdatePaper(ctx, req.(*UpdatePaperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Paper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paper.Paper",
	HandlerType: (*PaperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MGetPaper",
			Handler:    _Paper_MGetPaper_Handler,
		},
		{
			MethodName: "AddPaper",
			Handler:    _Paper_AddPaper_Handler,
		},
		{
			MethodName: "UpdatePaper",
			Handler:    _Paper_UpdatePaper_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paper.proto",
}
